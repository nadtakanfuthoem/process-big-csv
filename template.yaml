AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  process-big-csv

  Sample SAM Template for process-big-csv

Globals:
  Function:
    Timeout: 3
    Runtime: python3.13
    Architectures:
        - x86_64

Resources:
  ProcessFileFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: process-file/
      Handler: app.lambda_handler
      
  StartStateMachineFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: state-state-machine/
      Handler: app.lambda_handler
  
  # SQS
  InputQueue: 
    Type: AWS::SQS::Queue
    Properties: 
      QueueName: "InputQueue"

  # S3
  InputBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName : process-big-csv

  # DLQ
  DLQQueue: 
    Type: AWS::SQS::Queue
    Properties: 
      QueueName: "DLQQueue"

  # Step Function
  ProcessFileStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionSubstitutions:
        ProcessFileFunctionArn: !GetAtt ProcessFileFunction.Arn
      DefinitionUri: statemachine/process-file.asl.json
      Role: ProcessFileStateMachineRole.Arn

  # IAM Role
  ProcessFileStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: LambdaExecute
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !GetAtt ProcessFileFunction.Arn
  
  # Log
  StateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join [ "/", [ "stepfunctions", ProcessFileStateMachine]]